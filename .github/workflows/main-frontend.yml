name: Build and Deploy Frontend to VM

on:
  workflow_dispatch:

jobs:
  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout Github Repo'
        uses: actions/checkout@v3

      - name: 'Build API Server Container'
        run: |
          docker build -t "ghcr.io/${{secrets.GH_USER}}/frontend" \
                       -f pipeline/Dockerfile-GUI .

      - name: 'Login to GitHub Container Registry'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}

      - name: 'Push API Server Container'
        run: docker push "ghcr.io/${{secrets.GH_USER}}/frontend"

  deploy-frontend:
    needs: build-frontend
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout Github Repo'
        uses: actions/checkout@v3

      - name: 'Copy dockerCompose and env Files to VM'
        uses: appleboy/scp-action@master
        with:
          host: ${{secrets.SSH_HOST}}
          username: ${{secrets.SSH_USER}}
          key: ${{secrets.SSH_KEY}}
          passphrase: ${{secrets.SSH_PASSPHRASE}}
          source: "pipeline/dockerComposeFrontend.yml"
          target: "~/pipeline"
          strip_components: 1

      - name: 'Deploy API Server Container'
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.SSH_HOST}}
          username: ${{secrets.SSH_USER}}
          key: ${{secrets.SSH_KEY}}
          passphrase: ${{secrets.SSH_PASSPHRASE}}
          script: |
            # TODO: parameterize the container name `frontend`
            docker stop frontend && docker rm frontend
            docker system prune -af
            cd ~/pipeline
            docker compose -f dockerComposeFrontend.yml up -d
            rm -r ~/pipeline
